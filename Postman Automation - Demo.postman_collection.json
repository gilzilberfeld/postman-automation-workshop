{
	"info": {
		"_postman_id": "284449a1-feab-4767-8476-ebd1b76affe1",
		"name": "Postman Automation - Demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2056961",
		"_collection_link": "https://gold-shuttle-507494.postman.co/workspace/Postman-Automation~db1adb33-fd48-4778-9b69-f6727fd8b883/collection/2056961-284449a1-feab-4767-8476-ebd1b76affe1?action=share&source=collection_link&creator=2056961"
	},
	"item": [
		{
			"name": "Variables",
			"item": [
				{
					"name": "Basic GET Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/6942834/posts",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"6942834",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request with Variable",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/6942834/posts",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"6942834",
								"posts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Chaining",
			"item": [
				{
					"name": "1-Manual",
					"item": [
						{
							"name": "Add user",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Gil Zilberfeld\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"gil@testingil.com\",\r\n    \"status\": \"active\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/7554181",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7554181"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/7554185",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7554185"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "2-With Variables",
					"item": [
						{
							"name": "Add User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var theId = jsonData.id\r",
											"pm.collectionVariables.set(\"theUserId\", theId);\r",
											"console.log(\"I stored in theUserId: \" + theId)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Gil Zilberfeld\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"gil@testingil.com\",\r\n    \"status\": \"active\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var theId = pm.collectionVariables.get(\"theUserId\")\r",
											"console.log(\"Now I get the stored value: \" + theId + \" and use it in the request\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "3-Update With Variables",
					"item": [
						{
							"name": "Get User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var theStatus = jsonData.status\r",
											"pm.collectionVariables.set(\"Status\", theStatus);\r",
											"console.log(\"I stored in Status: \" + theStatus)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var oldStatus = pm.collectionVariables.get(\"Status\")\r",
											"var newStatus\r",
											"if (oldStatus === \"active\")\r",
											"    newStatus = \"inactive\"\r",
											"else\r",
											"    newStatus = \"active\"\r",
											"pm.collectionVariables.set(\"Status\", newStatus)    \r",
											"console.log (\"Old status was: \" + oldStatus)\r",
											"console.log(\"Gonna send: \" + newStatus)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Gil Zilberfeld\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"gil@testingil.com\",\r\n    \"status\": {{Status}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User After Update",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var theStatus = jsonData.status\r",
											"console.log (\"Got back: \" + theStatus)\r",
											"\r",
											"var storedStatus = pm.collectionVariables.get(\"Status\");\r",
											"console.log(\"Stored Status is: \" + storedStatus)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "4-Complete",
					"item": [
						{
							"name": "Add User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var theId = jsonData.id\r",
											"pm.collectionVariables.set(\"theUserId\", theId);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Gil Zilberfeld\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"gil@testingil.com\",\r\n    \"status\": \"active\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var theStatus = jsonData.status\r",
											"pm.collectionVariables.set(\"Status\", theStatus);\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var oldStatus = pm.collectionVariables.get(\"Status\")\r",
											"var newStatus\r",
											"if (oldStatus === \"active\")\r",
											"    newStatus = \"inactive\"\r",
											"else\r",
											"    newStatus = \"active\"\r",
											"pm.collectionVariables.set(\"Status\", newStatus)    \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Gil Zilberfeld\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"gil@testingil.com\",\r\n    \"status\": {{Status}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User After Update",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var theStatus = jsonData.status\r",
											"pm.collectionVariables.set(\"Status\", theStatus);\r",
											"console.log(\"I stored in Status: \" + theStatus)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Tests",
			"item": [
				{
					"name": "1-Status",
					"item": [
						{
							"name": "User Created",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Gil Zilberfeld\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"gil@testingil.com\",\r\n    \"status\": \"active\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "2-More Status tests",
					"item": [
						{
							"name": "User Created",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var theId = jsonData.id\r",
											"pm.collectionVariables.set(\"theUserId\", theId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Gil Zilberfeld\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"gil@testingil.com\",\r\n    \"status\": \"active\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User should be deleted\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "3-Better tests",
					"item": [
						{
							"name": "User Created",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User should be created\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Returned values should be the sent ones\", function() {\r",
											"    pm.expect(jsonData.name).to.eql(\"Gil Zilberfeld\");\r",
											"    pm.expect(jsonData.email).to.eql(\"gil@testingil.com\");\r",
											"});\r",
											"\r",
											"var theId = jsonData.id\r",
											"pm.collectionVariables.set(\"theUserId\", theId);\r",
											"pm.collectionVariables.set(\"theName\", jsonData.name)\r",
											"pm.collectionVariables.set(\"theEmail\", jsonData.email)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Gil Zilberfeld\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"gil@testingil.com\",\r\n    \"status\": \"active\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User should be found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Returned values should match the created ones\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"theUserId\"));\r",
											"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"theName\"));\r",
											"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"theEmail\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User should be deleted\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "4-Even better tests",
					"item": [
						{
							"name": "User Created",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User should be created\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Returned values should be the sent ones\", function() {\r",
											"    pm.expect(jsonData.name).to.eql(\"Gil Zilberfeld\");\r",
											"    pm.expect(jsonData.email).to.eql(\"gil@testingil.com\");\r",
											"});\r",
											"\r",
											"var theId = jsonData.id\r",
											"pm.collectionVariables.set(\"theUserId\", theId);\r",
											"pm.collectionVariables.set(\"theName\", jsonData.name)\r",
											"pm.collectionVariables.set(\"theEmail\", jsonData.email)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Gil Zilberfeld\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"gil@testingil.com\",\r\n    \"status\": \"active\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User should be found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Returned values should match the created ones\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"theUserId\"));\r",
											"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"theName\"));\r",
											"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"theEmail\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "User Is In User List",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var theUserId = pm.collectionVariables.get(\"theUserId\");\r",
											"\r",
											"pm.test(\"User id is in the returned list\", function () {\r",
											"    var userIds = [];\r",
											"    for (var i = 0; i < jsonData.length; i++) {\r",
											"        userIds.push(jsonData[i].id);\r",
											"     }\r",
											"    pm.expect(userIds).includes(theUserId);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User should be deleted\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cannot get deleted user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"User should not be found after deleting\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cannot delete user again",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Not found user cannot be deleted\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Resource not found\")\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{vault:go-rest-api:token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/{{theUserId}}",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{theUserId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Utils",
			"item": [
				{
					"name": "Edit User Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var oldStatus = pm.collectionVariables.get(\"Status\")\r",
									"var newStatus\r",
									"if (oldStatus === \"active\")\r",
									"    newStatus = \"inactive\"\r",
									"else\r",
									"    newStatus = \"active\"\r",
									"pm.collectionVariables.set(\"Status\", newStatus)    \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:go-rest-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Gil Zilberfeld\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"gil@testingil.com\",\r\n    \"status\": \"active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/7554190",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"7554190"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:go-rest-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/7554408",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"7554408"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:go-rest-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete existing users with email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json()\r",
									"\r",
									"var userIds = [];\r",
									"for (var i = 0; i < jsonData.length; i++) {\r",
									"    if (jsonData[i].email === \"gil@testingil.com\") {\r",
									"     userIds.push(jsonData[i].id);\r",
									"    }\r",
									"}\r",
									"\r",
									"var mytoken = pm.vault.get(\"go-rest-api:token\");  \r",
									"\r",
									"for (var j=0; j< userIds.length; j++) {\r",
									" \r",
									"pm.sendRequest({\r",
									"    url: 'https://gorest.co.in/public/v2/users/' + userIds[j] ,\r",
									"    method: 'DELETE',\r",
									"    headers: { 'Authorization': 'Bearer ${mytoken}' }\r",
									"}, function (err) {\r",
									"    if (err) {\r",
									"        console.log(\"it failed\");\r",
									"    } else {\r",
									"        console.log(\"it worked\");\r",
									"    }\r",
									"});\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:go-rest-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "theUserId",
			"value": ""
		},
		{
			"key": "Status",
			"value": ""
		},
		{
			"key": "theName",
			"value": ""
		},
		{
			"key": "theEmail",
			"value": ""
		}
	]
}